#
# Copyright (C) 2009-2013 Przemyslaw Pawelczyk <przemoc@gmail.com>
#
# This software is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2.
# See <http://www.gnu.org/licenses/gpl-2.0.txt>.
#
# This software is distributed in the hope that it will be useful, but
# WITHBIN ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#

NAME := vidma
DOCS := AUTHORS NEWS README.md
OBJS := main.o vdi.o ui-cli.o
MAN1 := $(NAME).1
BIN  := $(NAME)

LDLIBS := 

HOST := 
TARGET_ARCH := 
ifneq (,$(HOST))
	CROSS_COMPILE ?= $(HOST)-
endif
ifeq ($(CC),)
CC := gcc
endif
CC := $(CROSS_COMPILE)$(CC)
CCLD := $(CC)
STRIP := $(CROSS_COMPILE)strip

CC_V := $(shell $(CC) -v 2>&1)

CC_PARAMS = $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH)

SYSDEFINES_CMD := $(CC) $(CC_PARAMS) -E -dM -x c /dev/null

ifeq ($(shell $(SYSDEFINES_CMD) | sed '/^.define \<_WIN32\> /!d;s///'),1)
	OBJS += common_win.o
	LDLIBS += -lntdll
	BIN := $(addsuffix .exe,$(BIN))
else
	OBJS += common_posix.o
endif

SRCDIR := $(dir $(lastword $(MAKEFILE_LIST)))
NOT_IN_SRCDIR := $(shell test ! . -ef $(SRCDIR) && echo 1)
GIT_WORK_TREE := $(SRCDIR)

VIDMA_VERSION := $(shell \
	GIT_WORK_TREE="$(GIT_WORK_TREE)" git describe --tags --dirty 2>/dev/null || \
	awk "/\* What's new in version /"'{print "v" $$6 ((NR!=1)?"+":"");exit}' $(SRCDIR)/NEWS 2>/dev/null || \
	echo unknown )

OPTIONAL_FLAGS := -O2
MANDATORY_FLAGS := -ggdb -Wall -std=c99 -Wno-variadic-macros \
                   -D_FILE_OFFSET_BITS=64 -D_XOPEN_SOURCE=600 \
                   -DVIDMA_VERSION="\"$(VIDMA_VERSION)\""

CFLAGS += $(OPTIONAL_FLAGS)
override CFLAGS += $(MANDATORY_FLAGS)
CPPFLAGS += 
LDFLAGS += 

PREFIX := /usr/local
EPREFIX := $(PREFIX)
BINDIR := $(EPREFIX)/bin
DATADIR := $(PREFIX)/share
DOCDIR := $(DATADIR)/doc/$(NAME)
MANDIR := $(DATADIR)/man

INSTALL := install
INSTALL_DATA := $(INSTALL) -m 0644
INSTALL_EXEC := $(INSTALL) -m 0755

vpath %.c $(SRCDIR)
vpath %.h $(SRCDIR)
vpath %.ronn $(SRCDIR)

all: $(BIN)

main.o: FORCE main.c vdi.h ui.h common.h
vdi.o: vdi.c vdi.h vd.h ui.h common.h
ui-cli.o: ui-cli.c ui.h common.h

%.o: %.c
	$(CC) $(CC_PARAMS) -c -o $@ $<

$(BIN): $(OBJS)
	$(CCLD) $(addprefix -Wl$(comma),$(LDFLAGS)) $(TARGET_ARCH) -o $@ $(OBJS) $(LDLIBS)

%.1: %.1.ronn
	$(if $(shell test -n "$(NOT_IN_SRCDIR)" -a -f $(basename $<) -a ! $(basename $<) -ot $< && echo yes) , \
		cp  $(basename $<) $@ , \
		ronn --pipe -r $< >$@ \
	)

%.1.html: %.1.ronn
	ronn -5 --pipe --style=toc $< >$@

clean:
	$(RM) $(BIN) $(OBJS) $(if $(NOT_IN_SRCDIR),$(MAN1))

distclean: clean
	$(RM) Makefile $(MAN1).html

install: $(BIN) $(MAN1)
	$(INSTALL) -d $(DESTDIR)$(BINDIR)
	$(INSTALL_EXEC) $(BIN) $(DESTDIR)$(BINDIR)/$(BIN)
	$(INSTALL) -d $(DESTDIR)$(MANDIR)/man1
	$(INSTALL_DATA) $(SRCDIR)/$(MAN1) $(DESTDIR)$(MANDIR)/man1/$(MAN1)
	$(INSTALL) -d $(DESTDIR)$(DOCDIR)
	$(INSTALL_DATA) $(addprefix $(SRCDIR)/,$(DOCS)) $(DESTDIR)$(DOCDIR)

strip: $(BIN)
	$(STRIP) $^

uninstall:
	$(RM) $(DESTDIR)$(BINDIR)/$(BIN)
	$(RM) -r $(DESTDIR)$(DOCDIR)
	$(RM) $(DESTDIR)$(MANDIR)/man1/$(MAN1)

FORCE:

.PHONY: all clean distclean install strip uninstall
